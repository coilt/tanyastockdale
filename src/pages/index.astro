---
import "@fontsource/playfair-display/700.css";
import "@fontsource/quicksand";
import "../styles/globals.css";
import Layout from "../layouts/Layout.astro";
import Hero from "../components/Hero.astro";
import Testimonials from "@/components/Testimonials.astro";
import Lead from "../components/Lead.astro";
import { getHomepage } from "../lib/strapi";
import StrapiJsonTest from "../components/StrapiJsonTest.astro"

console.log(Astro.url);
console.log("üöÄ Index page is loading...");
console.log(`üîß Environment: ${import.meta.env.MODE}`);
console.log(
  `üåê STRAPI_URL: ${import.meta.env.PUBLIC_STRAPI_URL || "Not set, using default"}`,
);

// Fetch the homepage content from Strapi
let homePageContent = null;
try {
  console.log("üì≤ About to fetch homepage data...");
  homePageContent = await getHomepage();
  console.log(
    "üìÑ Homepage content received:",
    homePageContent ? "Data received" : "No data",
  );
  if (homePageContent) {
    console.log("üîç Homepage data structure:", Object.keys(homePageContent));

    // Log the entire homePageContent to see its structure
    console.log(
      "üìã Full homepage content:",
      JSON.stringify(homePageContent, null, 2),
    );

    // Specifically log the testimonials data
    console.log(
      "üß™ Testimonials data from Strapi:",
      homePageContent.testimonials
        ? JSON.stringify(homePageContent.testimonials, null, 2)
        : "Not found",
    );
  } else {
    console.log("‚ö†Ô∏è No homepage data received from Strapi");
  }
} catch (error) {
  console.error("‚ùå Error fetching homepage content:", error);
}

console.log("FULL HOMEPAGE CONTENT:", JSON.stringify(homePageContent, null, 2));

console.log(
  "TESTIMONIALS RAW:",
  JSON.stringify(homePageContent?.testimonials, null, 2),
);

// Get the Strapi URL for image paths
const STRAPI_URL =
  import.meta.env.PUBLIC_STRAPI_URL || "https://strapi.substorm.cc";
console.log(`üñºÔ∏è Using Strapi URL for images: ${STRAPI_URL}`);

// Background image from Strapi or fallback
const backgroundImage = homePageContent?.backgroundimage?.url
  ? `${STRAPI_URL}${homePageContent.backgroundimage.url}`
  : "/images/index-bg-3-opt.jpg";
console.log(`üñºÔ∏è Background image path: ${backgroundImage}`);

// Robustly extract testimonials array from homepage content
let testimonialsArr: any[] = [];
if (Array.isArray(homePageContent?.testimonials)) {
  testimonialsArr = homePageContent.testimonials;
} else if (Array.isArray(homePageContent?.testimonials?.data)) {
  testimonialsArr = homePageContent.testimonials.data;
}

console.log(
  "‚úÖ Extracted testimonials array:",
  JSON.stringify(testimonialsArr, null, 2),
);

console.log("TESTIMONIALS ARRAY:", JSON.stringify(testimonialsArr, null, 2));

const testimonialData = {
  testimonials: testimonialsArr.length
    ? testimonialsArr.map((testimonial: any) => {
        // Support both flat and Strapi v4 .attributes structure
        const t = testimonial.attributes || testimonial;
        return {
          title: t.title || "No title",
          content: t.content ? t.content.split("\n\n") : [],
          author: t.author || "Anonymous",
          photo: t.photo?.url
            ? `${STRAPI_URL}${t.photo.url}`
            : t.photo?.data?.attributes?.url
              ? `${STRAPI_URL}${t.photo.data.attributes.url}`
              : "/images/tallulah.jpg",
        };
      })
    : [
        {
          title: "FALLBACK",
          content: ["FALLBACK"],
          author: "FALLBACK",
          photo: "images/index-bg-3-opt.jpg",
        },
      ],
};
console.log(
  "üìù Prepared testimonial data:",
  JSON.stringify(testimonialData, null, 2),
);
---

<Layout title="Tanya Stockdale's homepage">
  <div
    class="bg top-0 z-[-2] w-full bg-[radial-gradient(100%_50%_at_50%_0%,rgba(0,163,255,0.13)_0,rgba(0,163,255,0)_50%,rgba(0,163,255,0)_100%)]"
  >
    <div class="wrapper-div flex flex-col justify-between">
      <div class="hero w-4/6 max-w-[840px] min-w-[300px] mx-auto bg-opacity-0">
        <Hero content={homePageContent?.hero} />
      </div>
    </div>
    <div>
      <Lead
        content={{
          quote: homePageContent?.lead?.data?.attributes?.quote || "",
          imageAlt: homePageContent?.lead?.data?.attributes?.imagealt || "",
          paragraphs: Array.isArray(homePageContent?.paragraphs?.data)
            ? homePageContent.paragraphs.data.map(
                (p: any) => p.attributes?.paragraph || "",
              )
            : [],
          image: homePageContent?.lead?.data?.attributes?.image?.data
            ?.attributes?.url
            ? `${STRAPI_URL}${homePageContent.lead.data.attributes.image.data.attributes.url}`
            : "/images/this-is-fine.jpg",
        }}
      />

      {/* Static heading for testimonials section */}
      <div class="mx-auto max-w-6xl px-6 lg:px-8">
        <div class="mx-auto max-w-2xl text-center">
          <h2
            class="mt-2 text-4xl font-serif tracking-tight text-balance text-avocado sm:text-5xl"
          >
            Here's what my clients say
          </h2>
        </div>
      </div>

      <!-- Pass the updated testimonial data -->
      <Testimonials content={testimonialData} />
    </div>
  </div>
</Layout>

<script>
  console.log("üìÉ Index page client-side script running");
</script>

<style define:vars={{ backgroundImage: `url("${backgroundImage}")` }}>
  .bg {
    min-height: 100vh;
    background-size: 100% auto;
    background-repeat: no-repeat;
    width: 100%;
    background-image: var(--backgroundImage);
    background-position: center 50vh;
  }

  @media (max-width: 768px) {
    .bg {
      background-position: center 22%;
    }
  }
  @media (max-width: 2268px) {
    .hero {
      height: 300px;
    }
  }

  .wrapper-div {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    min-height: 100vh;
  }
</style>
