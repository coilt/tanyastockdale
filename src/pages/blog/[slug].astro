---
import { BlogPost } from "../../components/BlogPost.jsx";
import type { PostOrPage } from "@tryghost/content-api";
import type { GhostPost } from "../../types/ghost-content-api.d";
const { post: rawPost } = Astro.props as { post: PostOrPage };

function isGhostPost(post: PostOrPage): post is GhostPost {
  return (
    "title" in post &&
    "excerpt" in post &&
    "url" in post &&
    "published_at" in post &&
    "feature_image" in post &&
    "slug" in post
  );
}

if (!isGhostPost(rawPost)) {
  throw new Error("Invalid post data");
}

const post: GhostPost = rawPost;

import Layout from "../../layouts/Layout.astro";
import { getGhostPosts } from "../../lib/ghost";

export async function getStaticPaths() {
  const posts = await getGhostPosts();
  return posts.map((post: PostOrPage) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

 
---

<Layout title={post.title}>
  <BlogPost client:load post={post} />
</Layout>
